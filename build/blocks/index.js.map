{"version":3,"file":"blocks/index.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAc,MCA7C,GCA+BA,OAAW,GAAQ,KCAnBA,OAAW,GAAc,WFAzBA,OAAW,GAAe,aGAzD,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAW,Q,wCC2B3DC,EAAAA,EAAAA,mBAAkBC,EAAAA,GAAe,CAC/BC,KAAM,CACNC,IAAK,cACLC,WAAY,WAEZC,WAAY,CACVC,KAAM,CACJ,CACEC,KAAM,YACNC,IAAK,MACLC,WAAY,CACVC,SAAU,CACRH,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMH,UAEpCI,cAAe,CACbP,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMC,eAEpCC,SAAU,CACRR,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAME,UAEpCP,IAAK,CACHD,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAML,KAEpCQ,GAAI,CACFT,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMG,IAEpCC,eAAgB,CACdV,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMI,gBAEpCC,WAAY,CACVX,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMK,YAEpCC,gBAAiB,CACfZ,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMM,iBAEpCC,UAAW,CACTb,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMO,WAEpCC,MAAO,CACLd,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMQ,OAEpCC,iBAAkB,CAChBf,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMS,kBAEpCC,KAAM,CACJhB,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMU,MAEpCC,KAAM,CACJjB,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMW,MAEpCC,MAAO,CACLlB,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMY,OAEpCC,OAAQ,CACNnB,KAAM,SACNI,UAAYC,GAAUA,EAAMC,MAAMa,YAS5CC,KCnFa,SAAcC,GAC3B,MAAMC,EAAWC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAGnDC,GAAeC,EAAAA,EAAAA,UACfC,GAAaC,EAAAA,EAAAA,kBACb,WAAE5B,EAAU,cAAE6B,GAAkBV,GAChC,SAAEb,EAAQ,IAAEP,EAAG,GAAEQ,GAAOP,EAM9B,OACE8B,EAAAA,EAAAA,eAAA,UAASH,IACPG,EAAAA,EAAAA,eAACC,wBAAuB,CAAC/B,WAAYA,EAAY6B,cAAeA,IAC/DvB,GAAYP,GAAOQ,GAClBuB,EAAAA,EAAAA,eAAAE,EAAAA,SAAA,MACAF,EAAAA,EAAAA,eAAA,OACEG,UAAY,sBAAqBb,IACjCc,IAAKT,IAGHK,EAAAA,EAAAA,eAACK,EAAAA,iBAAgB,CACfC,MAAM,gBACNpC,WAAY,CACVC,SAAUD,EAAWC,SACrBI,cAAeL,EAAWK,cAC1BC,SAAUN,EAAWM,SACrBP,IAAKC,EAAWD,IAChBQ,GAAIP,EAAWO,GACfC,eAAgBR,EAAWQ,eAC3BC,WAAYT,EAAWS,WACvBC,gBAAiBV,EAAWU,gBAC5BC,UAAWX,EAAWW,UACtBC,MAAOZ,EAAWY,MAClBC,iBAAkBb,EAAWa,iBAC7BC,KAAMd,EAAWc,KACjBC,KAAMf,EAAWe,KACjBC,MAAOhB,EAAWgB,MAClBC,OAAQjB,EAAWiB,aAMzBa,EAAAA,EAAAA,eAACO,kBAAiB,CAACrC,WAAYA,EAAY6B,cAAeA,IAIlE,EDsCAS,KE7Ga,WACd,OAAO,IACR,G","sources":["webpack://rrze-faq/external window [\"wp\",\"blocks\"]","webpack://rrze-faq/external window \"React\"","webpack://rrze-faq/external window [\"wp\",\"blockEditor\"]","webpack://rrze-faq/external window [\"wp\",\"i18n\"]","webpack://rrze-faq/external window [\"wp\",\"components\"]","webpack://rrze-faq/external window [\"wp\",\"editor\"]","webpack://rrze-faq/external window [\"wp\",\"element\"]","webpack://rrze-faq/./src/blocks/index.js","webpack://rrze-faq/./src/blocks/edit.js","webpack://rrze-faq/./src/blocks/save.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from \"@wordpress/blocks\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n\n/**\n * Internal dependencies\n */\nimport Edit from \"./edit\";\nimport save from \"./save\";\nimport metadata from \"./block.json\";\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata.name, {\n  icon: {\n\t\tsrc: \"editor-help\",\n\t\tbackground: \"#00458c\"\n\t},\n  transforms: {\n    from: [\n      {\n        type: \"shortcode\",\n        tag: \"faq\",\n        attributes: {\n          glossary: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.glossary,\n          },\n          glossarystyle: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.glossarystyle,\n          },\n          category: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.category,\n          },\n          tag: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.tag,\n          },\n          id: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.id,\n          },\n          hide_accordion: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.hide_accordion,\n          },\n          hide_title: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.hide_title,\n          },\n          expand_all_link: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.expand_all_link,\n          },\n          load_open: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.load_open,\n          },\n          color: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.color,\n          },\n          additional_class: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.additional_class,\n          },\n          lang: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.lang,\n          },\n          sort: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.sort,\n          },\n          order: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.order,\n          },\n          hstart: {\n            type: \"string\",\n            shortcode: (attrs) => attrs.named.hstart,\n          },\n        },\n      },\n    ],\n  },\n  /**\n   * @see ./edit.js\n   */\n  edit: Edit,\n\n  /**\n   * @see ./save.js\n   */\n  save,\n});\n\n\n","//Imports for necessary WordPress libraries\nimport { __ } from \"@wordpress/i18n\";\nimport { ToolbarGroup, ToolbarItem, ToolbarButton } from \"@wordpress/components\";\nimport { trash } from \"@wordpress/icons\";\nimport { useBlockProps, BlockControls } from \"@wordpress/block-editor\"; // eslint-disable-line import/no-unresolved\nimport { ServerSideRender } from \"@wordpress/editor\"; // eslint-disable-line import/no-unresolved\nimport { useState, useRef } from \"@wordpress/element\";\n\n//Imports for custom components\nimport {HeadingSelector} from \"./CustomComponents/HeadingSelector\";\n\n//Imports for helper functions\nimport { isTextInString } from \"./HelperFunctions/utils\";\n\n//Import the Editor Styles for the blockeditor\nimport \"./editor.scss\"; //Only active in the editor\n\n/**\n * \n * @param {*} props \n * @returns \n */\nexport default function Edit(props) {\n  const uniqueId = Math.random().toString(36).substring(2, 15);\n\n  // Create a ref to the container div\n  const containerRef = useRef();\n  const blockProps = useBlockProps();\n  const { attributes, setAttributes } = props;\n  const { category, tag, id } = attributes;\n\n  \n  /**\n   * Renders the FAQ block\n   */\n  return (\n    <div {...blockProps}>\n      <CustomInspectorControls attributes={attributes} setAttributes={setAttributes} />\n      {category || tag || id ? (\n        <>\n        <div\n          className={`rrze-faq-container-${uniqueId}`}\n          ref={containerRef}\n        >\n        {/* Renders dynamic Shortcode from includes/Gutenberg.php */}\n            <ServerSideRender\n              block=\"rrze/rrze-faq\"\n              attributes={{\n                glossary: attributes.glossary,\n                glossarystyle: attributes.glossarystyle,\n                category: attributes.category,\n                tag: attributes.tag,\n                id: attributes.id,\n                hide_accordion: attributes.hide_accordion,\n                hide_title: attributes.hide_title,\n                expand_all_link: attributes.expand_all_link,\n                load_open: attributes.load_open,\n                color: attributes.color,\n                additional_class: attributes.additional_class,\n                lang: attributes.lang,\n                sort: attributes.sort,\n                order: attributes.order,\n                hstart: attributes.hstart,                \n              }}\n              />\n            </div>\n          </>\n        ) : (\n          <CustomPlaceholder attributes={attributes} setAttributes={setAttributes} />\n        )}\n      </div>\n    );\n  }\n  ","//It's a dynamic block. The render callback is handled within Gutenberg.php.\nexport default function save() {\n\treturn null;\n}"],"names":["window","registerBlockType","metadata","icon","src","background","transforms","from","type","tag","attributes","glossary","shortcode","attrs","named","glossarystyle","category","id","hide_accordion","hide_title","expand_all_link","load_open","color","additional_class","lang","sort","order","hstart","edit","props","uniqueId","Math","random","toString","substring","containerRef","useRef","blockProps","useBlockProps","setAttributes","createElement","CustomInspectorControls","Fragment","className","ref","ServerSideRender","block","CustomPlaceholder","save"],"sourceRoot":""}